name: PDA Partner Automation

on:
  schedule:
    # 매일 오후 2시 (KST 기준)
    - cron: '0 5 * * *'  # UTC 오전 5시 = KST 오후 2시
  workflow_dispatch:  # 수동 실행 가능
    inputs:
      test_mode:
        description: 'Test Mode (true/false)'
        required: false
        default: 'false'
        type: choice
        options:
        - 'true'
        - 'false'
      limit:
        description: 'Process Limit (number of spreadsheets)'
        required: false
        default: '1'
        type: string
      generate_graphs:
        description: 'Generate Graphs (auto/true/false)'
        required: false
        default: 'auto'
        type: choice
        options:
        - 'auto'
        - 'true'
        - 'false'

jobs:
  run-pda-partner:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y fonts-nanum fonts-nanum-coding fonts-nanum-extra
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Run code quality checks
      run: |
        pip install black flake8 isort
        black --check --diff . || echo "⚠️ Black formatting issues found (continuing...)"
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics || echo "⚠️ Critical flake8 issues found (continuing...)"
        isort --check-only --diff . || echo "⚠️ Import sorting issues found (continuing...)"
        
    - name: Create Google API credentials
      run: |
        mkdir -p config
        echo "${{ secrets.SHEETS_SERVICE_ACCOUNT_KEY }}" | base64 --decode > config/sheets-service-account.json
        echo "${{ secrets.DRIVE_SERVICE_ACCOUNT_KEY }}" | base64 --decode > config/drive-service-account.json
        echo "✅ Google API credentials created successfully"
        ls -la config/
        
    - name: Set up environment variables
      run: |
        echo "SHEETS_KEY_PATH=./config/sheets-service-account.json" >> $GITHUB_ENV
        echo "DRIVE_KEY_PATH=./config/drive-service-account.json" >> $GITHUB_ENV
        echo "SPREADSHEET_ID=${{ secrets.SPREADSHEET_ID }}" >> $GITHUB_ENV
        echo "EMAIL_ADDRESS=${{ secrets.EMAIL_ADDRESS }}" >> $GITHUB_ENV
        echo "EMAIL_PASS=${{ secrets.EMAIL_PASS }}" >> $GITHUB_ENV
        echo "RECEIVER_EMAIL=${{ secrets.RECEIVER_EMAIL }}" >> $GITHUB_ENV
        echo "KAKAO_REST_API_KEY=${{ secrets.KAKAO_REST_API_KEY }}" >> $GITHUB_ENV
        echo "KAKAO_ACCESS_TOKEN=${{ secrets.KAKAO_ACCESS_TOKEN }}" >> $GITHUB_ENV
        echo "KAKAO_REFRESH_TOKEN=${{ secrets.KAKAO_REFRESH_TOKEN }}" >> $GITHUB_ENV
        echo "GITHUB_TOKEN=${{ secrets.GH_TOKEN }}" >> $GITHUB_ENV
        echo "GITHUB_USERNAME=${{ secrets.GH_USERNAME }}" >> $GITHUB_ENV
        echo "GITHUB_REPO=${{ secrets.GH_REPO }}" >> $GITHUB_ENV
        echo "DRIVE_FOLDER_ID=${{ secrets.DRIVE_FOLDER_ID }}" >> $GITHUB_ENV
        echo "JSON_DRIVE_FOLDER_ID=${{ secrets.JSON_DRIVE_FOLDER_ID }}" >> $GITHUB_ENV
        echo "TARGET_SHEET_NAME=${{ secrets.TARGET_SHEET_NAME }}" >> $GITHUB_ENV
        echo "GITHUB_UPLOAD=${{ secrets.GH_UPLOAD }}" >> $GITHUB_ENV
        
        # 워크플로우 입력값 처리
        if [ "${{ github.event.inputs.test_mode }}" != "" ]; then
          echo "TEST_MODE=${{ github.event.inputs.test_mode }}" >> $GITHUB_ENV
        else
          echo "TEST_MODE=false" >> $GITHUB_ENV
        fi
        
        if [ "${{ github.event.inputs.limit }}" != "" ]; then
          echo "LIMIT=${{ github.event.inputs.limit }}" >> $GITHUB_ENV
        else
          echo "LIMIT=1" >> $GITHUB_ENV
        fi
        
        if [ "${{ github.event.inputs.generate_graphs }}" != "" ]; then
          echo "GENERATE_GRAPHS=${{ github.event.inputs.generate_graphs }}" >> $GITHUB_ENV
        else
          echo "GENERATE_GRAPHS=auto" >> $GITHUB_ENV
        fi
        
    - name: Run PDA Partner
      run: |
        python PDA_partner.py
        
    - name: Upload artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: pda-partner-outputs
        path: |
          output/
          *.html
          *.png
          *.log
        retention-days: 7
        
    - name: Cleanup credentials
      if: always()
      run: |
        rm -f config/sheets-service-account.json
        rm -f config/drive-service-account.json 