name: PDA Partner Daily Run

on:
  schedule:
    # 매일 오후 2시 (KST) = UTC 오전 5시
    - cron: '0 5 * * *'
  workflow_dispatch:
    inputs:
      limit:
        description: '처리할 항목 수 (기본값: 200)'
        required: false
        default: '200'
        type: string
      generate_graphs:
        description: '그래프 생성 (true/false)'
        required: false
        default: false
        type: boolean
      github_upload:
        description: 'GitHub 업로드 (true/false)'
        required: false
        default: true
        type: boolean

jobs:
  run-pda-partner:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y fonts-nanum fonts-nanum-coding fonts-nanum-extra
        # 폰트 캐시 업데이트
        fc-cache -fv
        # 설치된 한글 폰트 확인
        fc-list | grep -i nanum
        
    - name: Install Python dependencies
      run: |
        pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Create Google service account keys
      run: |
        mkdir -p config
        
        # Sheets 서비스 계정 키 생성
        echo "${{ secrets.SHEETS_SERVICE_ACCOUNT_KEY }}" | base64 --decode > config/gst-manegemnet-70faf8ce1bff.json
        
        # Drive 서비스 계정 키 생성  
        echo "${{ secrets.DRIVE_SERVICE_ACCOUNT_KEY }}" | base64 --decode > config/gst-manegemnet-ab8788a05cff.json
        
        # 파일 생성 확인
        if [ -f "config/gst-manegemnet-70faf8ce1bff.json" ]; then
          echo "✅ Sheets 키 파일 생성 완료"
        else
          echo "❌ Sheets 키 파일 생성 실패"
          exit 1
        fi
        
        if [ -f "config/gst-manegemnet-ab8788a05cff.json" ]; then
          echo "✅ Drive 키 파일 생성 완료"
        else
          echo "❌ Drive 키 파일 생성 실패"
          exit 1
        fi
        
    - name: Run PDA Partner
      run: |
        echo "🚀 PDA Partner 실행 시작..."
        
        # 환경변수 설정
        export SPREADSHEET_ID="${{ secrets.SPREADSHEET_ID }}"
        export TARGET_SHEET_NAME="${{ secrets.TARGET_SHEET_NAME }}"
        export DRIVE_FOLDER_ID="${{ secrets.DRIVE_FOLDER_ID }}"
        export JSON_DRIVE_FOLDER_ID="${{ secrets.JSON_DRIVE_FOLDER_ID }}"
        export GITHUB_TOKEN="${{ secrets.GH_TOKEN }}"
        export GITHUB_USERNAME="${{ secrets.GH_USERNAME }}"
        export GITHUB_REPO="${{ secrets.GH_REPO }}"
        export GITHUB_BRANCH="${{ secrets.GH_BRANCH }}"
        export KAKAO_REST_API_KEY="${{ secrets.KAKAO_REST_API_KEY }}"
        export KAKAO_ACCESS_TOKEN="${{ secrets.KAKAO_ACCESS_TOKEN }}"
        export KAKAO_REFRESH_TOKEN="${{ secrets.KAKAO_REFRESH_TOKEN }}"
        export EMAIL_ADDRESS="${{ secrets.EMAIL_ADDRESS }}"
        export EMAIL_PASS="${{ secrets.EMAIL_PASS }}"
        export RECEIVER_EMAIL="${{ secrets.RECEIVER_EMAIL }}"
        export SHEETS_KEY_PATH="config/gst-manegemnet-70faf8ce1bff.json"
        export DRIVE_KEY_PATH="config/gst-manegemnet-ab8788a05cff.json"
        
        # 입력값 처리
        if [ "${{ github.event.inputs.limit }}" != "" ]; then
          export LIMIT="${{ github.event.inputs.limit }}"
        else
          export LIMIT="200"
        fi
        
        if [ "${{ github.event.inputs.generate_graphs }}" == "true" ]; then
          export GENERATE_GRAPHS="true"
        else
          export GENERATE_GRAPHS="false"
        fi
        
        if [ "${{ github.event.inputs.github_upload }}" == "true" ]; then
          export GITHUB_UPLOAD="true"
        else
          export GITHUB_UPLOAD="false"
        fi
        
        # 실행
        python PDA_partner.py
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: pda-partner-results-${{ github.run_number }}
        path: |
          output/
          *.html
          *.log
        retention-days: 7 