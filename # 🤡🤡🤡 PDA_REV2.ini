# 🤡🤡🤡 PDA_REV2.5 업데이트 로그 🤡🤡🤡

## 📅 버전 히스토리 및 주요 업데이트 내용

### ✅ 기본 기능 확장
- **WD Chart (일일 누적 작업 시간 그래프)** 추가
- **정보판 시트에서 모델명 자동 로딩**
- **모델별 평균 시간(AVDATA) 불러오기 및 입력**
- `Working Hours Graph`, `Legend Chart` 생성 기능 구현
- `calculate_working_hours_with_holidays` 함수 정합성 검증 완료

---

### 📧 이메일 기능
- **평균 시간 대비 Overtime 및 NaN 값 존재 시 메일 자동 발송 기능 구현 (2025.02.26)**
  - Overtime 기준: ±2시간 설정
  - 전장, 검사, 마무리 작업 소요시간 포함 (2025.03.03)
  - 모델별 기구 작업 분류 및 GAIA-I DUAL 평균값으로 임시 평균값 입력
- 메일 본문에 **모델별 하이퍼링크** 자동 삽입 (2025.03.11)
- HTML 메일 첨부 + 카카오톡 자동 전송 기능 연동

---

### 📦 QR Monitor 통합
- QR Monitor 코드와 통합
- `TMS_기구` → **`TMS_반제품` 카테고리 추가 및 명칭 통일 (2025.03.11)**

---

### 🌐 GitHub 연동
- HTML 메일용 대시보드 파일을 **항상 `index.html`로 저장** (GitHub Pages 기본 진입점)
- `build_combined_email_body` 함수에 **KST 기준 실행 시간 및 주차 정보 표시** 기능 추가
- `upload_to_github()` 함수로 GitHub Pages 자동 업로드  
  - 토큰은 `GITHUB_TOKEN` 환경변수 또는 코드 내 직접 설정 가능

---

### 📄 PDF 관련
- PDF 첨부 기능은 생략
- HTML 메일 첨부만 사용

---

### 💬 카카오톡 알림 기능
- HTML 전송 후 **카카오톡 텍스트 템플릿으로 자동 알림 발송**
- **Refresh Token 자동 갱신 기능 추가**

---

### 🧪 디버깅 및 정합성 개선
- `'assay' → 'assy'` 오타 수정으로 인한 카운트 오류 해결
- 기존 **원형 그래프** → **막대 그래프 변경**

---

### 📊 NaN 분석 그래프 개선
- `generate_nan_pie_chart` → `generate_nan_bar_charts`로 변경
- **두 가지 막대그래프 생성**
  1. **작업 수 대비 NaN 비율** (`NaN_Summary_by_Tasks.png`)
  2. **전체 NaN 건수 대비 비율** (`NaN_Summary_by_Total.png`)
- 계산 방식:
  - 협력사 총 작업 수 대비 NaN 비율
  - 전체 NaN 건수 합계 대비 협력사별 비율
- HTML 본문에 이미지 링크로 삽입 + 첨부파일 포함

---

### 📈 차트 시각화 업데이트 (2025.03.17 11:36)
- `task_Chart`: **Bar Graph**
- `total_chart`: **Pie Graph**
- NaN Value: **기구/전장 분류별 시각화**

### ✅ PDA REV2.4 (2025.03.28)

#### 📌 주요 업데이트 요약

| 항목 | 내용 |
|------|------|
| 🔄 버전 업데이트 | `REV2.3` → **REV2.4** |
| 🧪 테스트 모드 (`TEST_MODE`) 추가 | - `True`일 경우 **GitHub 업로드 생략**<br>- HTML, 그래프 생성 및 Drive 업로드는 **정상 수행**<br>- 결과 확인 후 수동 업로드 가능 |
| 📅 요일별 그래프 생성 조건 추가 | - **월요일(0)**: 3종 그래프 생성 및 스프레드시트에 하이퍼링크 삽입<br>- **금요일(4)**: 3종 그래프 생성만 수행 (하이퍼링크 삽입 생략)<br>- **화~목요일(1~3)**: 그래프 미생성 및 하이퍼링크 미삽입 |
| 🧠 분석 방향 명확화 | - NaN 정합성 중심 데이터 확보<br>- **NaN 비율이 10% 이하인 경우**에 한해 워킹데이 기반 병목 분석 활용 예정 |
| ⏳ 향후 개선 예정 | - NaN 10% 초과 데이터 자동 제외 옵션 도입<br>- 추이 그래프 고도화 및 주간/월간 성능 분석 기능 추가 계획 |

---



## ✅ 막대그래프 & 파이그래프 NaN 통계 정합성 검증 (2025-03-28)

**목적:**  
협력사별 NaN 누락 수치를 시각화한 **막대그래프**와 **파이그래프** 결과값의 **카운트 정합성**을 점검함.

**이슈 배경:**  
이전에는 파이그래프에 실제 존재하지 않는 NaN 값이 과도하게 집계되는 문제 발생.  
TMS 관련 협력사를 `TMS(m)`, `TMS(e)`, `TMS_반제품`으로 세분화하면서 시각화 정합성 확인이 필요했음.

---

### 🧪 테스트 조건
- 분석 대상: 집에서 전체 NaN/OT 데이터를 기반으로 한 `all_results`
- 시각화 대상 협력사:
  - `BAT`, `FNI`, `TMS(m)`, `C&A`, `P&S`, `TMS(e)`, `TMS_반제품`
- 기준 데이터: `compute_occurrence_rates()`의 결과값 기반
- 검증 항목:
  - **막대그래프**: 협력사별 `(NaN 건수 / 총 작업 수) * 100`
  - **파이그래프**: 협력사별 `NaN 건수 / 전체 NaN 건수` 비율

---

### 📊 정합성 결과

#### ✅ 막대그래프 결과

| 협력사      | NaN 건수 | 총 작업 수 | NaN 비율 (%) |
|-------------|-----------|--------------|---------------|
| FNI         | 116       | 359          | 32.3%         |
| TMS_반제품  | 12        | 171          | 7.0%          |
| P&S         | 1         | 143          | 0.7%          |
| TMS(e)      | 0         | 44           | 0.0%          |
| BAT         | 9         | 261          | 3.4%          |
| C&A         | 9         | 269          | 3.3%          |
| TMS(m)      | 15        | 54           | 27.8%         |
| **총 NaN 합계** | **162**   |              |               |

#### ✅ 파이그래프 결과

| 협력사      | NaN 건수 | 비율 (%) |
|-------------|-----------|-----------|
| FNI         | 115       | 71.6%     |
| TMS(m)      | 14        | 9.3%      |
| TMS_반제품  | 12        | 7.4%      |
| BAT         | 9         | 5.6%      |
| C&A         | 9         | 5.6%      |
| P&S         | 1         | 0.7%      |
| TMS(e)      | 0         | 0.0%      |
| **총합**    | **160**   | 100%      |

> 🔍 주의: 파이그래프 총합이 162가 아닌 160으로 나타나는 이유는 **소수점 절삭 또는 `autopct` 내 오차** 발생 가능성 있음. (무시 가능 수준)

---

### 🔧 디버깅 요약
- ✅ 막대그래프 & 파이그래프 모두 **정합성 정상**
- ✅ `TMS(m)`, `TMS(e)`, `TMS_반제품`으로 세분화하여 **중복 카운팅 없이 분리 성공**
- ✅ `partner_stats` 구조와 `total_nan` 계산이 일치하며, 시각화 결과도 일관됨

---

### ✅ 결론
- **NaN 누락 집계 시각화 완성도 확보됨**
- **TMS 구분 시 혼동 없이 정확한 협력사별 누락률 시각화 가능**
- **PDA 정기 보고서 및 KPI 리포트 활용 가능 상태**

## ✅ PDA 모델별 작업 분류 로직 변경 사항 (2025.04.01 적용)

### 📌 변경 목적
- **TMS 작업의 모델별 분류 기준을 명확화**하여 통계 정확성 향상
- `DRAGON`, `DRAGON DUAL`, `SWS-I` 모델의 경우 **TMS 작업도 기구작업으로 간주**
- 그 외 모델은 기존과 동일하게 TMS 작업을 `TMS_반제품`으로 분류

---

- ✅ **PDA 진행률 로직 개선 및 NaN 오탐 방지 (2025-04-03)**

  - **진행률 계산 개선**
    - 기존: 진행률이 NaN이면 시작/완료 시간 있어도 집계 제외
    - 개선: 시작/완료 시간만 있으면 NaN이라도 100%로 간주

  - **중복 작업명 처리**
    - 기존: 작업중단(J열) 등으로 동일 작업명 중복 → 통계 왜곡
    - 개선:
      - ✅ 진행률 100% 항목만 유지
      - ❌ 100% 미만 항목은 미완료로 간주 (제외)

  - **NaN 집계 로직 보정**
    - 기존: 중복된 완료 작업까지 NaN으로 잡혀 이중 카운트
    - 개선:
      - 완료된 작업은 NaN/OT 집계에서 제외
      - 중복 제거로 NaN 비율 정확도 향상

  - **적용 위치**
    - `calculate_progress_by_category()` → 진행률 보정
    - `compute_occurrence_rates()` → NaN/OT 필터 적용
    - → 요약표, 그래프, 이메일, 카카오톡 **자동 반영**

---

- ✅ **NaN 카운트 로직 상세 개선**

  - 문제요약:
    - 완료된 작업인데도 NaN으로 잡히거나
    - 동일 작업명이 중복되며 이중 집계 발생

  - 개선 로직:
    - 조건: `진행률 ≥ 100` 또는 `시작/완료 시간이 모두 존재`
    - 위 조건 만족 시 **완료 작업**으로 간주 → NaN/OT 제외

  - 예시 코드:

    ```python
    completed_tasks = set(
        df[
            (df["진행율"] >= 100) |
            (df["시작 시간"].notna() & df["완료 시간"].notna())
        ]["내용"]
    )

    for _, row in df.iterrows():
        if row["내용"] in completed_tasks:
            continue  # ✅ 완료 작업 제외
        if pd.isna(row["시작 시간"]) or pd.isna(row["완료 시간"]):
            # 🔍 실제 NaN만 카운트
    ```

---

- ✅ **이메일 리포트 시각화 개선 (2025-04-04)**

  - **진행률 시각화**
    - 게이지 바(progress bar)로 표시
    - 100%일 경우 ✅ 아이콘 표시

  - **툴팁 기능**
    - 마우스 오버 시 `"기구 완료: 34 / 37건"` 등 표시

  - **NaN/OT 강조 유지**
    - 값이 0이 아니면 빨간색, 굵게 강조 표시

  - **하단 디테일 뷰 유지**
    - `<details>` 태그로 작업 내역 열람 가능

  - **HTML 구현 요약**
    - `<div style="...">`로 게이지 바
    - `<span title="...">`로 툴팁
    - 상단에 **GST 배너 이미지 삽입**

---

- 📌 **향후 개선 아이디어**
  - 카테고리별 작업 리스트 툴팁 추가
  - 표 행 hover 강조
  - PDF/이미지 자동 첨부 기능 도입 예정

---

- 🚀 **정리 요약**
  - NaN 오탐 제거 → 통계 신뢰도 상승
  - 진행률 시각화 도입 → 리포트 가독성 향상
  - 이메일 + 대시보드 통합 → 운영 효율 강화



- ✅ **Factory Dashboard 코드 안정화 리팩토링 (2025-04-11)**

  - **Google Sheets 데이터 로딩 구조 변경**
    - `.execute()` 직접 호출 → `api_call_with_backoff()`로 감싸서 오류 대응
    - API Quota 초과(429 등) 발생 시 자동 재시도 및 예외 처리

  - **배치 처리 구조 도입**
    - 모델 처리 시 1건씩 순차 실행 → `batch_size` 단위로 분할 처리
    - 각 배치마다 5초 간격, 모델별 1초 대기시간 삽입

  - **예외 대응 구조 강화**
    - 각 단계마다 `try-except` 문으로 오류 방지
    - 실패한 항목은 건너뛰고 다음으로 진행 (로깅 포함)

  - **권장 설정 요약**
    | 항목           | 설정값     |
    |----------------|------------|
    | batch_size     | 5~10       |
    | 요청 간 대기    | 1초        |
    | 배치 간 대기    | 5초        |
    | 재시도 횟수     | 최대 5회   |
    | 최대 대기시간   | 60초       |

  - **도입 효과**
    - 대량 Google Sheets 호출 시 오류 방지
    - 429/503 에러 회피 및 자동 복구
    - 전체 공장 대시보드 안정성 및 실행률 향상





---
- ✅ **Factory Dashboard 코드 안정화 리팩토링 (2025-05-27)**
 - **요약테이블 필터 추가**
 - **OrderNO하이퍼링크추가**
</span>
